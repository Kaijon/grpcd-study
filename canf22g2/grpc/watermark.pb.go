// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.12.0
// source: watermark.proto

package grpc

import (
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Watermark information with channel differentiation
type GetAllWatermarkInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel int32 `protobuf:"varint,1,opt,name=channel,proto3" json:"channel,omitempty"` // Channel identifier
}

func (x *GetAllWatermarkInfoRequest) Reset() {
	*x = GetAllWatermarkInfoRequest{}
	mi := &file_watermark_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllWatermarkInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllWatermarkInfoRequest) ProtoMessage() {}

func (x *GetAllWatermarkInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_watermark_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllWatermarkInfoRequest.ProtoReflect.Descriptor instead.
func (*GetAllWatermarkInfoRequest) Descriptor() ([]byte, []int) {
	return file_watermark_proto_rawDescGZIP(), []int{0}
}

func (x *GetAllWatermarkInfoRequest) GetChannel() int32 {
	if x != nil {
		return x.Channel
	}
	return 0
}

type GetAllWatermarkInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username         string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	OptionUserName   bool   `protobuf:"varint,2,opt,name=OptionUserName,proto3" json:"OptionUserName,omitempty"`
	OptionDeviceName bool   `protobuf:"varint,3,opt,name=OptionDeviceName,proto3" json:"OptionDeviceName,omitempty"`
	OptionGPS        bool   `protobuf:"varint,4,opt,name=OptionGPS,proto3" json:"OptionGPS,omitempty"`
	OptionTime       bool   `protobuf:"varint,5,opt,name=OptionTime,proto3" json:"OptionTime,omitempty"`
	OptionLogo       bool   `protobuf:"varint,6,opt,name=OptionLogo,proto3" json:"OptionLogo,omitempty"`
	OptionExposure   bool   `protobuf:"varint,7,opt,name=OptionExposure,proto3" json:"OptionExposure,omitempty"`
}

func (x *GetAllWatermarkInfoResponse) Reset() {
	*x = GetAllWatermarkInfoResponse{}
	mi := &file_watermark_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllWatermarkInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllWatermarkInfoResponse) ProtoMessage() {}

func (x *GetAllWatermarkInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_watermark_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllWatermarkInfoResponse.ProtoReflect.Descriptor instead.
func (*GetAllWatermarkInfoResponse) Descriptor() ([]byte, []int) {
	return file_watermark_proto_rawDescGZIP(), []int{1}
}

func (x *GetAllWatermarkInfoResponse) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetAllWatermarkInfoResponse) GetOptionUserName() bool {
	if x != nil {
		return x.OptionUserName
	}
	return false
}

func (x *GetAllWatermarkInfoResponse) GetOptionDeviceName() bool {
	if x != nil {
		return x.OptionDeviceName
	}
	return false
}

func (x *GetAllWatermarkInfoResponse) GetOptionGPS() bool {
	if x != nil {
		return x.OptionGPS
	}
	return false
}

func (x *GetAllWatermarkInfoResponse) GetOptionTime() bool {
	if x != nil {
		return x.OptionTime
	}
	return false
}

func (x *GetAllWatermarkInfoResponse) GetOptionLogo() bool {
	if x != nil {
		return x.OptionLogo
	}
	return false
}

func (x *GetAllWatermarkInfoResponse) GetOptionExposure() bool {
	if x != nil {
		return x.OptionExposure
	}
	return false
}

type SetAllWatermarkInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username         string              `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	OptionUserName   bool                `protobuf:"varint,2,opt,name=OptionUserName,proto3" json:"OptionUserName,omitempty"`
	OptionDeviceName bool                `protobuf:"varint,3,opt,name=OptionDeviceName,proto3" json:"OptionDeviceName,omitempty"`
	OptionGPS        bool                `protobuf:"varint,4,opt,name=OptionGPS,proto3" json:"OptionGPS,omitempty"`
	OptionTime       bool                `protobuf:"varint,5,opt,name=OptionTime,proto3" json:"OptionTime,omitempty"`
	OptionLogo       *wrappers.BoolValue `protobuf:"bytes,6,opt,name=OptionLogo,proto3" json:"OptionLogo,omitempty"`
	OptionExposure   *wrappers.BoolValue `protobuf:"bytes,7,opt,name=OptionExposure,proto3" json:"OptionExposure,omitempty"`
	Channel          int32               `protobuf:"varint,8,opt,name=channel,proto3" json:"channel,omitempty"` // Channel identifier
}

func (x *SetAllWatermarkInfoRequest) Reset() {
	*x = SetAllWatermarkInfoRequest{}
	mi := &file_watermark_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetAllWatermarkInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAllWatermarkInfoRequest) ProtoMessage() {}

func (x *SetAllWatermarkInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_watermark_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAllWatermarkInfoRequest.ProtoReflect.Descriptor instead.
func (*SetAllWatermarkInfoRequest) Descriptor() ([]byte, []int) {
	return file_watermark_proto_rawDescGZIP(), []int{2}
}

func (x *SetAllWatermarkInfoRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SetAllWatermarkInfoRequest) GetOptionUserName() bool {
	if x != nil {
		return x.OptionUserName
	}
	return false
}

func (x *SetAllWatermarkInfoRequest) GetOptionDeviceName() bool {
	if x != nil {
		return x.OptionDeviceName
	}
	return false
}

func (x *SetAllWatermarkInfoRequest) GetOptionGPS() bool {
	if x != nil {
		return x.OptionGPS
	}
	return false
}

func (x *SetAllWatermarkInfoRequest) GetOptionTime() bool {
	if x != nil {
		return x.OptionTime
	}
	return false
}

func (x *SetAllWatermarkInfoRequest) GetOptionLogo() *wrappers.BoolValue {
	if x != nil {
		return x.OptionLogo
	}
	return nil
}

func (x *SetAllWatermarkInfoRequest) GetOptionExposure() *wrappers.BoolValue {
	if x != nil {
		return x.OptionExposure
	}
	return nil
}

func (x *SetAllWatermarkInfoRequest) GetChannel() int32 {
	if x != nil {
		return x.Channel
	}
	return 0
}

type SetAllWatermarkInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *SetAllWatermarkInfoResponse) Reset() {
	*x = SetAllWatermarkInfoResponse{}
	mi := &file_watermark_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetAllWatermarkInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAllWatermarkInfoResponse) ProtoMessage() {}

func (x *SetAllWatermarkInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_watermark_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAllWatermarkInfoResponse.ProtoReflect.Descriptor instead.
func (*SetAllWatermarkInfoResponse) Descriptor() ([]byte, []int) {
	return file_watermark_proto_rawDescGZIP(), []int{3}
}

func (x *SetAllWatermarkInfoResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_watermark_proto protoreflect.FileDescriptor

var file_watermark_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0d, 0x63, 0x61, 0x6e, 0x66, 0x32, 0x32, 0x67, 0x32, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x1a, 0x0e, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x36, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x57, 0x61, 0x74, 0x65, 0x72, 0x6d,
	0x61, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x93, 0x02, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x57, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x47, 0x50, 0x53, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x47, 0x50, 0x53, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x6f, 0x67, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x78, 0x70, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x22, 0xe4,
	0x02, 0x0a, 0x1a, 0x53, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x57, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61,
	0x72, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x2a, 0x0a, 0x10, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x50, 0x53, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x50, 0x53, 0x12, 0x1e, 0x0a, 0x0a, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x42, 0x0a, 0x0e, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x37, 0x0a, 0x1b, 0x53, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x57,
	0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xf6,
	0x01, 0x0a, 0x14, 0x57, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x6f,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x57, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x29,
	0x2e, 0x63, 0x61, 0x6e, 0x66, 0x32, 0x32, 0x67, 0x32, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x57, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x61, 0x6e, 0x66,
	0x32, 0x32, 0x67, 0x32, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x57, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x57, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x29,
	0x2e, 0x63, 0x61, 0x6e, 0x66, 0x32, 0x32, 0x67, 0x32, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x57, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x61, 0x6e, 0x66,
	0x32, 0x32, 0x67, 0x32, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x57, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0f, 0x5a, 0x0d, 0x63, 0x61, 0x6e, 0x66, 0x32,
	0x32, 0x67, 0x32, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_watermark_proto_rawDescOnce sync.Once
	file_watermark_proto_rawDescData = file_watermark_proto_rawDesc
)

func file_watermark_proto_rawDescGZIP() []byte {
	file_watermark_proto_rawDescOnce.Do(func() {
		file_watermark_proto_rawDescData = protoimpl.X.CompressGZIP(file_watermark_proto_rawDescData)
	})
	return file_watermark_proto_rawDescData
}

var file_watermark_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_watermark_proto_goTypes = []any{
	(*GetAllWatermarkInfoRequest)(nil),  // 0: canf22g2.grpc.GetAllWatermarkInfoRequest
	(*GetAllWatermarkInfoResponse)(nil), // 1: canf22g2.grpc.GetAllWatermarkInfoResponse
	(*SetAllWatermarkInfoRequest)(nil),  // 2: canf22g2.grpc.SetAllWatermarkInfoRequest
	(*SetAllWatermarkInfoResponse)(nil), // 3: canf22g2.grpc.SetAllWatermarkInfoResponse
	(*wrappers.BoolValue)(nil),          // 4: google.protobuf.BoolValue
}
var file_watermark_proto_depIdxs = []int32{
	4, // 0: canf22g2.grpc.SetAllWatermarkInfoRequest.OptionLogo:type_name -> google.protobuf.BoolValue
	4, // 1: canf22g2.grpc.SetAllWatermarkInfoRequest.OptionExposure:type_name -> google.protobuf.BoolValue
	0, // 2: canf22g2.grpc.WatermarkInfoService.GetAllWatermarkInfo:input_type -> canf22g2.grpc.GetAllWatermarkInfoRequest
	2, // 3: canf22g2.grpc.WatermarkInfoService.SetAllWatermarkInfo:input_type -> canf22g2.grpc.SetAllWatermarkInfoRequest
	1, // 4: canf22g2.grpc.WatermarkInfoService.GetAllWatermarkInfo:output_type -> canf22g2.grpc.GetAllWatermarkInfoResponse
	3, // 5: canf22g2.grpc.WatermarkInfoService.SetAllWatermarkInfo:output_type -> canf22g2.grpc.SetAllWatermarkInfoResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_watermark_proto_init() }
func file_watermark_proto_init() {
	if File_watermark_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_watermark_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_watermark_proto_goTypes,
		DependencyIndexes: file_watermark_proto_depIdxs,
		MessageInfos:      file_watermark_proto_msgTypes,
	}.Build()
	File_watermark_proto = out.File
	file_watermark_proto_rawDesc = nil
	file_watermark_proto_goTypes = nil
	file_watermark_proto_depIdxs = nil
}
